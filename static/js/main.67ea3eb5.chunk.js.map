{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Chart","ref","React","useRef","useEffect","createChart","current","width","height","addLineSeries","setData","time","value","App","props","binance","state","apiKeyValue","apiSecretValue","handleChangeAPIKey","bind","handleChangeAPISecret","handleRun","event","this","setState","target","Binance","options","APIKEY","APISECRET","className","name","type","onChange","onClick","symbol","interval","timezone","style","locale","toolbar_bg","enable_publishing","withdateranges","hide_side_toolbar","allow_symbol_change","theme","Themes","DARK","src","logo","alt","href","rel","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAe,MAA0B,iC,uCCMzC,SAASA,IACP,IAAMC,EAAMC,IAAMC,SAmBlB,OAjBAC,qBAAU,WACMC,YAAYJ,EAAIK,QAAS,CAAEC,MAAO,IAAKC,OAAQ,MACpCC,gBACdC,QAAQ,CACjB,CAAEC,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAE9B,IAGD,mCACE,qBAAKX,IAAKA,M,IA8EDY,E,kDArEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,QAAU,KACf,EAAKC,MAAQ,CAACC,YAAa,GAAIC,eAAgB,IAC/C,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,sBAAwB,EAAKA,sBAAsBD,KAA3B,gBAC7B,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBANA,E,sDASnB,SAAmBG,GACjBC,KAAKC,SAAS,CAACR,YAAaM,EAAMG,OAAOd,U,mCAG3C,SAAsBW,GACpBC,KAAKC,SAAS,CAACP,eAAgBK,EAAMG,OAAOd,U,uBAG9C,WACE,IAAMe,EAAU,wDAChBH,KAAKT,SAAU,IAAIY,GAAUC,QAAQ,CACnCC,OAAQL,KAAKR,MAAMC,YACnBa,UAAWN,KAAKR,MAAME,mB,oBAI1B,WACE,OACE,sBAAKa,UAAU,MAAf,UACE,uBAAOC,KAAK,SAASC,KAAK,OAAOrB,MAAOY,KAAKR,MAAMC,YAAaiB,SAAUV,KAAKL,qBAC/E,uBAAOa,KAAK,YAAYC,KAAK,OAAOrB,MAAOY,KAAKR,MAAME,eAAgBgB,SAAUV,KAAKH,wBACrF,wBAAQc,QAASX,KAAKF,UAAtB,iBAEA,cAAC,IAAD,CACEf,MAAO,IACPC,OAAQ,IACR4B,OAAO,gBACPC,SAAS,IACTC,SAAS,gBACTC,MAAO,EACPC,OAAO,KACPC,WAAW,UACXC,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,EACnBC,qBAAqB,EACrBC,MAAOC,SAAOC,OAGhB,cAAChD,EAAD,IAEA,yBAAQ+B,UAAU,aAAlB,UACE,qBAAKkB,IAAKC,EAAMnB,UAAU,WAAWoB,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEpB,UAAU,WACVqB,KAAK,sBACL1B,OAAO,SACP2B,IAAI,sBAJN,mC,GAxDQnD,IAAMoD,WCxBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67ea3eb5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport { createChart } from 'lightweight-charts';\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\nimport './App.css';\n\nfunction Chart() {\n  const ref = React.useRef();\n\n  useEffect(() => {\n    const chart = createChart(ref.current, { width: 400, height: 300 });\n    const lineSeries = chart.addLineSeries();\n    lineSeries.setData([\n      { time: '2019-04-11', value: 80.01 },\n      { time: '2019-04-12', value: 96.63 },\n      { time: '2019-04-13', value: 76.64 },\n      { time: '2019-04-14', value: 81.89 },\n      { time: '2019-04-15', value: 74.43 },\n      { time: '2019-04-16', value: 80.01 },\n      { time: '2019-04-17', value: 96.63 },\n      { time: '2019-04-18', value: 76.64 },\n      { time: '2019-04-19', value: 81.89 },\n      { time: '2019-04-20', value: 74.43 },\n    ]);\n  }, []);\n\n  return (\n    <>\n      <div ref={ref} />\n    </>\n  );\n}\n\n//export default Chart;\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.binance = null;\n    this.state = {apiKeyValue: \"\", apiSecretValue: \"\"};\n    this.handleChangeAPIKey = this.handleChangeAPIKey.bind(this);\n    this.handleChangeAPISecret = this.handleChangeAPISecret.bind(this);\n    this.handleRun = this.handleRun.bind(this);\n  }\n\n  handleChangeAPIKey(event) {\n    this.setState({apiKeyValue: event.target.value})\n  }\n\n  handleChangeAPISecret(event) {\n    this.setState({apiSecretValue: event.target.value})\n  }\n\n  handleRun() {\n    const Binance = import('node-binance-api');\n    this.binance = new Binance().options({\n      APIKEY: this.state.apiKeyValue,\n      APISECRET: this.state.apiSecretValue\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <input name=\"APIKEY\" type=\"text\" value={this.state.apiKeyValue} onChange={this.handleChangeAPIKey}/>\n        <input name=\"APISECRET\" type=\"text\" value={this.state.apiSecretValue} onChange={this.handleChangeAPISecret}/>\n        <button onClick={this.handleRun}>Run</button>\n\n        <TradingViewWidget\n          width={980}\n          height={610}\n          symbol=\"KRAKEN:ADAEUR\"\n          interval=\"D\"\n          timezone=\"Europe/Madrid\"\n          style={1}\n          locale=\"es\"\n          toolbar_bg=\"#f1f3f6\"\n          enable_publishing={false}\n          withdateranges={true}\n          hide_side_toolbar={false}\n          allow_symbol_change={true}\n          theme={Themes.DARK}\n        />\n\n        <Chart/>\n\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}